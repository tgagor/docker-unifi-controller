name: build

on:
  push:
    branches:
      - master
      - 'feature/*'
      - 'bugfix/*'
    tags:
      - '*.*.*'
  pull_request:
    branches:
      - master
  schedule:
    # weekly: at 04:13 on Monday
    - cron: '17 4 * * 1'

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      - name: Available QEMU platforms
        run: echo ${{ steps.qemu.outputs.platforms }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      - name: Available Buildx platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
        
      - name: Build, tag and push the Docker image
        run: |
          echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

          # docker build \
          #   --tag ghcr.io/tgagor/unifi-controller:${{ github.sha }} \
          #   --cache-from ghcr.io/tgagor/unifi-controller:${{ github.sha }} .
          docker buildx build \
            --platform linux/amd64,linux/arm64,linux/ppc64le,linux/s390x \
            --tag ghcr.io/tgagor/unifi-controller:${{ github.sha }} \
            --squash \
            --push \
            .

          docker push --all-tags ghcr.io/tgagor/unifi-controller

  security-scan:
    runs-on: ubuntu-20.04
    needs:
      - build
    steps:
      - uses: actions/checkout@v2
      - name: Fetch image
        run: |
          echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
          docker pull ghcr.io/tgagor/unifi-controller:${{ github.sha }}

      - name: Run Trivy vulnerability scanner on Alpine image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/tgagor/unifi-controller:${{ github.sha }}
          format: template
          template: '@/contrib/sarif.tpl'
          # don't fail
          exit-code: 0
          output: trivy-results.sarif
          severity: CRITICAL,HIGH,MEDIUM

      - name: Upload Trivy Alpine variant scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: trivy-results.sarif

  release:
    runs-on: ubuntu-20.04
    needs:
      - build
      - security-scan
    steps:
      - uses: actions/checkout@v2
      - name: Bump version and push tag
        if: github.ref == 'refs/heads/master'
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract version from tag on master
        if: github.ref == 'refs/heads/master'
        env:
          VERSION_TAG: ${{ steps.tag_version.outputs.new_tag }}
        run: echo "DOCKER_TAG=${VERSION_TAG#v}" >> $GITHUB_ENV

      - name: Use branch name as version not on master
        if: github.ref != 'refs/heads/master'
        run: echo "DOCKER_TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Fetch and tag images
        run: |
          echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

          docker pull ghcr.io/tgagor/unifi-controller:${{ github.sha }}
          
          docker run -i --rm \
            --log-driver=none -a stdin -a stdout -a stderr \
            ghcr.io/tgagor/unifi-controller:${{ github.sha }} \
            dpkg -s unifi | grep -i version | tee unifi-version
          
          docker tag ghcr.io/tgagor/unifi-controller:${{ github.sha }} tgagor/unifi-controller:build-${DOCKER_TAG}
          UNIFY_VERSION=$(cat unifi-version | cut -f2 -d' ')
          docker tag ghcr.io/tgagor/unifi-controller:${{ github.sha }} tgagor/unifi-controller:$(echo $UNIFY_VERSION)
          docker tag ghcr.io/tgagor/unifi-controller:${{ github.sha }} tgagor/unifi-controller:$(echo $UNIFY_VERSION | cut -d- -f1 | cut -d . -f 1,2,3)
          docker tag ghcr.io/tgagor/unifi-controller:${{ github.sha }} tgagor/unifi-controller:$(echo $UNIFY_VERSION | cut -d . -f 1,2)
          docker tag ghcr.io/tgagor/unifi-controller:${{ github.sha }} tgagor/unifi-controller:$(echo $UNIFY_VERSION | cut -d . -f 1)

      - name: Push images
        if: github.ref == 'refs/heads/master'
        run: |
          echo ${{ secrets.HUB_ACCESS }} | docker login -u $GITHUB_ACTOR --password-stdin

          docker push --all-tags tgagor/unifi-controller

      - name: Create normal GitHub release
        if: github.ref == 'refs/heads/master' && github.event_name != 'schedule'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

      - name: Get current date
        if: github.event_name == 'schedule'
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      - name: Create a weekly GitHub release
        if: github.event_name == 'schedule'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: |
            Weekly rebuild on ${{ steps.date.outputs.date }}
